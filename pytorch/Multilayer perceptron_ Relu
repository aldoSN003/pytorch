{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyOnFXbXZbNbrMD7Iz+vvslJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"nyVLAFrvev6Y"},"outputs":[],"source":["import torch\n","import numpy as np"]},{"cell_type":"code","source":[],"metadata":{"id":"1OYFKsoq301U"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip list"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1QsoWCQhfZa8","executionInfo":{"status":"ok","timestamp":1730426480666,"user_tz":360,"elapsed":1207,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"539742de-ddb6-42e0-c36b-d497f6312df8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Package                            Version\n","---------------------------------- -------------------\n","absl-py                            1.4.0\n","accelerate                         0.34.2\n","aiohappyeyeballs                   2.4.3\n","aiohttp                            3.10.10\n","aiosignal                          1.3.1\n","alabaster                          0.7.16\n","albucore                           0.0.19\n","albumentations                     1.4.20\n","altair                             4.2.2\n","annotated-types                    0.7.0\n","anyio                              3.7.1\n","argon2-cffi                        23.1.0\n","argon2-cffi-bindings               21.2.0\n","array_record                       0.5.1\n","arviz                              0.20.0\n","astropy                            6.1.4\n","astropy-iers-data                  0.2024.10.28.0.34.7\n","astunparse                         1.6.3\n","async-timeout                      4.0.3\n","atpublic                           4.1.0\n","attrs                              24.2.0\n","audioread                          3.0.1\n","autograd                           1.7.0\n","babel                              2.16.0\n","backcall                           0.2.0\n","beautifulsoup4                     4.12.3\n","bigframes                          1.24.0\n","bigquery-magics                    0.4.0\n","bleach                             6.1.0\n","blinker                            1.4\n","blis                               0.7.11\n","blosc2                             2.0.0\n","bokeh                              3.4.3\n","Bottleneck                         1.4.2\n","bqplot                             0.12.43\n","branca                             0.8.0\n","CacheControl                       0.14.0\n","cachetools                         5.5.0\n","catalogue                          2.0.10\n","certifi                            2024.8.30\n","cffi                               1.17.1\n","chardet                            5.2.0\n","charset-normalizer                 3.4.0\n","chex                               0.1.87\n","clarabel                           0.9.0\n","click                              8.1.7\n","cloudpathlib                       0.20.0\n","cloudpickle                        3.1.0\n","cmake                              3.30.5\n","cmdstanpy                          1.2.4\n","colorcet                           3.1.0\n","colorlover                         0.3.0\n","colour                             0.1.5\n","community                          1.0.0b1\n","confection                         0.1.5\n","cons                               0.4.6\n","contourpy                          1.3.0\n","cryptography                       43.0.3\n","cuda-python                        12.2.1\n","cudf-cu12                          24.10.1\n","cufflinks                          0.17.3\n","cupy-cuda12x                       12.2.0\n","cvxopt                             1.3.2\n","cvxpy                              1.5.3\n","cycler                             0.12.1\n","cymem                              2.0.8\n","Cython                             3.0.11\n","dask                               2024.10.0\n","datascience                        0.17.6\n","db-dtypes                          1.3.0\n","dbus-python                        1.2.18\n","debugpy                            1.6.6\n","decorator                          4.4.2\n","defusedxml                         0.7.1\n","Deprecated                         1.2.14\n","diffusers                          0.30.3\n","distro                             1.9.0\n","dlib                               19.24.2\n","dm-tree                            0.1.8\n","docker-pycreds                     0.4.0\n","docstring_parser                   0.16\n","docutils                           0.18.1\n","dopamine_rl                        4.0.9\n","duckdb                             1.1.2\n","earthengine-api                    1.2.0\n","easydict                           1.13\n","ecos                               2.0.14\n","editdistance                       0.8.1\n","eerepr                             0.0.4\n","einops                             0.8.0\n","en-core-web-sm                     3.7.1\n","entrypoints                        0.4\n","et_xmlfile                         2.0.0\n","etils                              1.10.0\n","etuples                            0.3.9\n","eval_type_backport                 0.2.0\n","exceptiongroup                     1.2.2\n","fastai                             2.7.18\n","fastcore                           1.7.19\n","fastdownload                       0.0.7\n","fastjsonschema                     2.20.0\n","fastprogress                       1.0.3\n","fastrlock                          0.8.2\n","filelock                           3.16.1\n","firebase-admin                     6.5.0\n","Flask                              2.2.5\n","flatbuffers                        24.3.25\n","flax                               0.8.5\n","folium                             0.18.0\n","fonttools                          4.54.1\n","frozendict                         2.4.6\n","frozenlist                         1.5.0\n","fsspec                             2024.10.0\n","future                             1.0.0\n","gast                               0.6.0\n","gcsfs                              2024.10.0\n","GDAL                               3.6.4\n","gdown                              5.2.0\n","geemap                             0.35.0\n","gensim                             4.3.3\n","geocoder                           1.38.1\n","geographiclib                      2.0\n","geopandas                          1.0.1\n","geopy                              2.4.1\n","gin-config                         0.5.0\n","gitdb                              4.0.11\n","GitPython                          3.1.43\n","glob2                              0.7\n","google                             2.0.3\n","google-ai-generativelanguage       0.6.10\n","google-api-core                    2.19.2\n","google-api-python-client           2.137.0\n","google-auth                        2.27.0\n","google-auth-httplib2               0.2.0\n","google-auth-oauthlib               1.2.1\n","google-cloud-aiplatform            1.70.0\n","google-cloud-bigquery              3.25.0\n","google-cloud-bigquery-connection   1.15.5\n","google-cloud-bigquery-storage      2.27.0\n","google-cloud-bigtable              2.26.0\n","google-cloud-core                  2.4.1\n","google-cloud-datastore             2.19.0\n","google-cloud-firestore             2.16.1\n","google-cloud-functions             1.16.5\n","google-cloud-iam                   2.16.0\n","google-cloud-language              2.13.4\n","google-cloud-pubsub                2.25.0\n","google-cloud-resource-manager      1.13.0\n","google-cloud-storage               2.8.0\n","google-cloud-translate             3.15.5\n","google-colab                       1.0.0\n","google-crc32c                      1.6.0\n","google-generativeai                0.8.3\n","google-pasta                       0.2.0\n","google-resumable-media             2.7.2\n","googleapis-common-protos           1.65.0\n","googledrivedownloader              0.4\n","graphviz                           0.20.3\n","greenlet                           3.1.1\n","grpc-google-iam-v1                 0.13.1\n","grpcio                             1.64.1\n","grpcio-status                      1.48.2\n","gspread                            6.0.2\n","gspread-dataframe                  3.3.1\n","gym                                0.25.2\n","gym-notices                        0.0.8\n","h11                                0.14.0\n","h5netcdf                           1.4.0\n","h5py                               3.12.1\n","holidays                           0.59\n","holoviews                          1.19.1\n","html5lib                           1.1\n","httpcore                           1.0.6\n","httpimport                         1.4.0\n","httplib2                           0.22.0\n","httpx                              0.27.2\n","huggingface-hub                    0.24.7\n","humanize                           4.11.0\n","hyperopt                           0.2.7\n","ibis-framework                     9.2.0\n","idna                               3.10\n","imageio                            2.36.0\n","imageio-ffmpeg                     0.5.1\n","imagesize                          1.4.1\n","imbalanced-learn                   0.12.4\n","imgaug                             0.4.0\n","immutabledict                      4.2.0\n","importlib_metadata                 8.5.0\n","importlib_resources                6.4.5\n","imutils                            0.5.4\n","inflect                            7.4.0\n","iniconfig                          2.0.0\n","intel-cmplr-lib-ur                 2025.0.0\n","intel-openmp                       2025.0.0\n","ipyevents                          2.0.2\n","ipyfilechooser                     0.6.0\n","ipykernel                          5.5.6\n","ipyleaflet                         0.19.2\n","ipyparallel                        8.8.0\n","ipython                            7.34.0\n","ipython-genutils                   0.2.0\n","ipython-sql                        0.5.0\n","ipytree                            0.2.2\n","ipywidgets                         7.7.1\n","itsdangerous                       2.2.0\n","jax                                0.4.33\n","jax-cuda12-pjrt                    0.4.33\n","jax-cuda12-plugin                  0.4.33\n","jaxlib                             0.4.33\n","jeepney                            0.7.1\n","jellyfish                          1.1.0\n","jieba                              0.42.1\n","Jinja2                             3.1.4\n","jiter                              0.6.1\n","joblib                             1.4.2\n","jsonpatch                          1.33\n","jsonpickle                         3.3.0\n","jsonpointer                        3.0.0\n","jsonschema                         4.23.0\n","jsonschema-specifications          2024.10.1\n","jupyter-client                     6.1.12\n","jupyter-console                    6.1.0\n","jupyter_core                       5.7.2\n","jupyter-leaflet                    0.19.2\n","jupyter-server                     1.24.0\n","jupyterlab_pygments                0.3.0\n","jupyterlab_widgets                 3.0.13\n","kaggle                             1.6.17\n","kagglehub                          0.3.3\n","keras                              3.4.1\n","keyring                            23.5.0\n","kiwisolver                         1.4.7\n","langchain                          0.3.4\n","langchain-core                     0.3.13\n","langchain-text-splitters           0.3.0\n","langcodes                          3.4.1\n","langsmith                          0.1.137\n","language_data                      1.2.0\n","launchpadlib                       1.10.16\n","lazr.restfulclient                 0.14.4\n","lazr.uri                           1.0.6\n","lazy_loader                        0.4\n","libclang                           18.1.1\n","libcudf-cu12                       24.10.1\n","librosa                            0.10.2.post1\n","lightgbm                           4.5.0\n","linkify-it-py                      2.0.3\n","llvmlite                           0.43.0\n","locket                             1.0.0\n","logical-unification                0.4.6\n","lxml                               5.3.0\n","marisa-trie                        1.2.1\n","Markdown                           3.7\n","markdown-it-py                     3.0.0\n","MarkupSafe                         3.0.2\n","matplotlib                         3.8.0\n","matplotlib-inline                  0.1.7\n","matplotlib-venn                    1.1.1\n","mdit-py-plugins                    0.4.2\n","mdurl                              0.1.2\n","miniKanren                         1.0.3\n","missingno                          0.5.2\n","mistune                            3.0.2\n","mizani                             0.13.0\n","mkl                                2024.2.2\n","ml-dtypes                          0.4.1\n","mlxtend                            0.23.1\n","more-itertools                     10.5.0\n","moviepy                            1.0.3\n","mpmath                             1.3.0\n","msgpack                            1.1.0\n","multidict                          6.1.0\n","multipledispatch                   1.0.0\n","multitasking                       0.0.11\n","murmurhash                         1.0.10\n","music21                            9.1.0\n","namex                              0.0.8\n","natsort                            8.4.0\n","nbclassic                          1.1.0\n","nbclient                           0.10.0\n","nbconvert                          7.16.4\n","nbformat                           5.10.4\n","nest-asyncio                       1.6.0\n","networkx                           3.4.2\n","nibabel                            5.3.2\n","nltk                               3.8.1\n","notebook                           6.5.5\n","notebook_shim                      0.2.4\n","numba                              0.60.0\n","numexpr                            2.10.1\n","numpy                              1.26.4\n","nvidia-cublas-cu12                 12.6.3.3\n","nvidia-cuda-cupti-cu12             12.6.80\n","nvidia-cuda-nvcc-cu12              12.6.77\n","nvidia-cuda-runtime-cu12           12.6.77\n","nvidia-cudnn-cu12                  9.5.1.17\n","nvidia-cufft-cu12                  11.3.0.4\n","nvidia-curand-cu12                 10.3.7.77\n","nvidia-cusolver-cu12               11.7.1.2\n","nvidia-cusparse-cu12               12.5.4.2\n","nvidia-nccl-cu12                   2.23.4\n","nvidia-nvjitlink-cu12              12.6.77\n","nvtx                               0.2.10\n","nx-cugraph-cu12                    24.10.0\n","oauth2client                       4.1.3\n","oauthlib                           3.2.2\n","openai                             1.52.2\n","opencv-contrib-python              4.10.0.84\n","opencv-python                      4.10.0.84\n","opencv-python-headless             4.10.0.84\n","openpyxl                           3.1.5\n","opentelemetry-api                  1.16.0\n","opentelemetry-sdk                  1.16.0\n","opentelemetry-semantic-conventions 0.37b0\n","opt_einsum                         3.4.0\n","optax                              0.2.3\n","optree                             0.13.0\n","orbax-checkpoint                   0.6.4\n","orjson                             3.10.10\n","osqp                               0.6.7.post3\n","packaging                          24.1\n","pandas                             2.2.2\n","pandas-datareader                  0.10.0\n","pandas-gbq                         0.24.0\n","pandas-stubs                       2.2.2.240909\n","pandocfilters                      1.5.1\n","panel                              1.4.5\n","param                              2.1.1\n","parso                              0.8.4\n","parsy                              2.1\n","partd                              1.4.2\n","pathlib                            1.0.1\n","patsy                              0.5.6\n","peewee                             3.17.7\n","peft                               0.13.2\n","pexpect                            4.9.0\n","pickleshare                        0.7.5\n","pillow                             10.4.0\n","pip                                24.1.2\n","platformdirs                       4.3.6\n","plotly                             5.24.1\n","plotnine                           0.14.0\n","pluggy                             1.5.0\n","polars                             1.9.0\n","pooch                              1.8.2\n","portpicker                         1.5.2\n","preshed                            3.0.9\n","prettytable                        3.11.0\n","proglog                            0.1.10\n","progressbar2                       4.5.0\n","prometheus_client                  0.21.0\n","promise                            2.3\n","prompt_toolkit                     3.0.48\n","propcache                          0.2.0\n","prophet                            1.1.6\n","proto-plus                         1.25.0\n","protobuf                           3.20.3\n","psutil                             5.9.5\n","psycopg2                           2.9.10\n","ptyprocess                         0.7.0\n","py-cpuinfo                         9.0.0\n","py4j                               0.10.9.7\n","pyarrow                            17.0.0\n","pyarrow-hotfix                     0.6\n","pyasn1                             0.6.1\n","pyasn1_modules                     0.4.1\n","pycocotools                        2.0.8\n","pycparser                          2.22\n","pydantic                           2.9.2\n","pydantic_core                      2.23.4\n","pydata-google-auth                 1.8.2\n","pydot                              3.0.2\n","pydotplus                          2.0.2\n","PyDrive                            1.3.1\n","PyDrive2                           1.20.0\n","pyerfa                             2.0.1.4\n","pygame                             2.6.1\n","pygit2                             1.16.0\n","Pygments                           2.18.0\n","PyGObject                          3.42.1\n","PyJWT                              2.9.0\n","pylibcudf-cu12                     24.10.1\n","pylibcugraph-cu12                  24.10.0\n","pylibraft-cu12                     24.10.0\n","pymc                               5.17.0\n","pymystem3                          0.2.0\n","pynvjitlink-cu12                   0.4.0\n","pyogrio                            0.10.0\n","PyOpenGL                           3.1.7\n","pyOpenSSL                          24.2.1\n","pyparsing                          3.2.0\n","pyperclip                          1.9.0\n","pyproj                             3.7.0\n","pyshp                              2.3.1\n","PySocks                            1.7.1\n","pyspark                            3.5.3\n","pytensor                           2.25.5\n","pytest                             7.4.4\n","python-apt                         0.0.0\n","python-box                         7.2.0\n","python-dateutil                    2.8.2\n","python-louvain                     0.16\n","python-slugify                     8.0.4\n","python-utils                       3.9.0\n","pytz                               2024.2\n","pyviz_comms                        3.0.3\n","PyYAML                             6.0.2\n","pyzmq                              24.0.1\n","qdldl                              0.1.7.post4\n","ratelim                            0.1.6\n","referencing                        0.35.1\n","regex                              2024.9.11\n","requests                           2.32.3\n","requests-oauthlib                  1.3.1\n","requests-toolbelt                  1.0.0\n","requirements-parser                0.9.0\n","rich                               13.9.3\n","rmm-cu12                           24.10.0\n","rpds-py                            0.20.0\n","rpy2                               3.4.2\n","rsa                                4.9\n","safetensors                        0.4.5\n","scikit-image                       0.24.0\n","scikit-learn                       1.5.2\n","scipy                              1.13.1\n","scooby                             0.10.0\n","scs                                3.2.7\n","seaborn                            0.13.2\n","SecretStorage                      3.3.1\n","Send2Trash                         1.8.3\n","sentence-transformers              3.2.1\n","sentencepiece                      0.2.0\n","sentry-sdk                         2.17.0\n","setproctitle                       1.3.3\n","setuptools                         75.1.0\n","shap                               0.46.0\n","shapely                            2.0.6\n","shellingham                        1.5.4\n","simple-parsing                     0.1.6\n","six                                1.16.0\n","sklearn-pandas                     2.2.0\n","slicer                             0.0.8\n","smart-open                         7.0.5\n","smmap                              5.0.1\n","sniffio                            1.3.1\n","snowballstemmer                    2.2.0\n","soundfile                          0.12.1\n","soupsieve                          2.6\n","soxr                               0.5.0.post1\n","spacy                              3.7.5\n","spacy-legacy                       3.0.12\n","spacy-loggers                      1.0.5\n","Sphinx                             5.0.2\n","sphinxcontrib-applehelp            2.0.0\n","sphinxcontrib-devhelp              2.0.0\n","sphinxcontrib-htmlhelp             2.1.0\n","sphinxcontrib-jsmath               1.0.1\n","sphinxcontrib-qthelp               2.0.0\n","sphinxcontrib-serializinghtml      2.0.0\n","SQLAlchemy                         2.0.36\n","sqlglot                            25.1.0\n","sqlparse                           0.5.1\n","srsly                              2.4.8\n","stanio                             0.5.1\n","statsmodels                        0.14.4\n","StrEnum                            0.4.15\n","stringzilla                        3.10.5\n","sympy                              1.13.1\n","tables                             3.8.0\n","tabulate                           0.9.0\n","tbb                                2021.13.1\n","tcmlib                             1.2.0\n","tenacity                           9.0.0\n","tensorboard                        2.17.0\n","tensorboard-data-server            0.7.2\n","tensorflow                         2.17.0\n","tensorflow-datasets                4.9.6\n","tensorflow-hub                     0.16.1\n","tensorflow-io-gcs-filesystem       0.37.1\n","tensorflow-metadata                1.16.1\n","tensorflow-probability             0.24.0\n","tensorstore                        0.1.67\n","termcolor                          2.5.0\n","terminado                          0.18.1\n","text-unidecode                     1.3\n","textblob                           0.17.1\n","tf_keras                           2.17.0\n","tf-slim                            1.1.0\n","thinc                              8.2.5\n","threadpoolctl                      3.5.0\n","tifffile                           2024.9.20\n","timm                               1.0.11\n","tinycss2                           1.4.0\n","tokenizers                         0.19.1\n","toml                               0.10.2\n","tomli                              2.0.2\n","toolz                              0.12.1\n","torch                              2.5.0+cu121\n","torchaudio                         2.5.0+cu121\n","torchsummary                       1.5.1\n","torchvision                        0.20.0+cu121\n","tornado                            6.3.3\n","tqdm                               4.66.6\n","traitlets                          5.7.1\n","traittypes                         0.2.1\n","transformers                       4.44.2\n","tweepy                             4.14.0\n","typeguard                          4.4.0\n","typer                              0.12.5\n","types-pytz                         2024.2.0.20241003\n","types-setuptools                   75.2.0.20241025\n","typing_extensions                  4.12.2\n","tzdata                             2024.2\n","tzlocal                            5.2\n","uc-micro-py                        1.0.3\n","umf                                0.9.0\n","uritemplate                        4.1.1\n","urllib3                            2.2.3\n","vega-datasets                      0.9.0\n","wadllib                            1.3.6\n","wandb                              0.18.5\n","wasabi                             1.1.3\n","wcwidth                            0.2.13\n","weasel                             0.4.1\n","webcolors                          24.8.0\n","webencodings                       0.5.1\n","websocket-client                   1.8.0\n","Werkzeug                           3.0.6\n","wheel                              0.44.0\n","widgetsnbextension                 3.6.10\n","wordcloud                          1.9.3\n","wrapt                              1.16.0\n","xarray                             2024.10.0\n","xarray-einstats                    0.8.0\n","xgboost                            2.1.2\n","xlrd                               2.0.1\n","xyzservices                        2024.9.0\n","yarl                               1.17.0\n","yellowbrick                        1.5\n","yfinance                           0.2.48\n","zipp                               3.20.2\n"]}]},{"cell_type":"markdown","source":["# Tensors\n","- A torch.Tensor is a multi-dimensional matrix containing elements of a single data type\n","- Similar to Numpy Arrays, but full of things that make them work better on GPU's (vs regular CPU's)\n","- defaul datatype of float32\n","- more suitable for deep learning than a numpy array"],"metadata":{"id":"BAor5CJdg05C"}},{"cell_type":"code","source":["my_list = [1,2,3,4,5,6] #one dimensional array\n","np1 = np.random.rand(3,4) # matrix 3x4\n","print(np1)\n","print(np1.dtype)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yj-IVuFPgjSf","executionInfo":{"status":"ok","timestamp":1730426480667,"user_tz":360,"elapsed":20,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"84fc39ee-d1a4-41e9-b85a-269e2ef17584"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0.79404967 0.40505446 0.95761326 0.43965578]\n"," [0.52470744 0.20564976 0.67184964 0.86295502]\n"," [0.48228337 0.20113816 0.7883359  0.99739447]]\n","float64\n"]}]},{"cell_type":"code","source":["tensor_2d = torch.randn(3,4)\n","print(tensor_2d)\n","print(tensor_2d.dtype)\n","print(tensor_2d.device)\n","print(tensor_2d.shape)\n","print(tensor_2d.size())\n","print(tensor_2d.requires_grad)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CsiOfwNmigV0","executionInfo":{"status":"ok","timestamp":1730426480667,"user_tz":360,"elapsed":15,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"13a500d2-70a9-4701-b312-9f1c7a003308"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[-1.5896,  0.2618,  0.4062, -0.6204],\n","        [-1.0305,  0.2579,  0.4303,  0.8891],\n","        [ 1.1741,  0.0381, -2.4271,  0.6623]])\n","torch.float32\n","cpu\n","torch.Size([3, 4])\n","torch.Size([3, 4])\n","False\n"]}]},{"cell_type":"code","source":["tensor_3d = torch.zeros(2,3,4)\n","tensor_3d"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n4Q8ucn-i1Gw","executionInfo":{"status":"ok","timestamp":1730426480667,"user_tz":360,"elapsed":13,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"85a00fdb-e76c-4453-87db-4bd94d56090c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[[0., 0., 0., 0.],\n","         [0., 0., 0., 0.],\n","         [0., 0., 0., 0.]],\n","\n","        [[0., 0., 0., 0.],\n","         [0., 0., 0., 0.],\n","         [0., 0., 0., 0.]]])"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# create a tensor out of numpy array\n","my_tensor = torch.tensor(np1)\n","print(my_tensor)\n","print(my_tensor.dtype)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lyHOIwa8jBgH","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":13,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"3e7d9446-7bd2-47b3-da48-6f292d2cdd6c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[0.7940, 0.4051, 0.9576, 0.4397],\n","        [0.5247, 0.2056, 0.6718, 0.8630],\n","        [0.4823, 0.2011, 0.7883, 0.9974]], dtype=torch.float64)\n","torch.float64\n"]}]},{"cell_type":"code","source":["my_torch = torch.arange(10)\n","my_torch"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"unldA45kkc2P","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":13,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"e583830d-dd70-4772-9f6b-e614bab9224a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Reshape and View\n","my_torch = my_torch.reshape(2,5)\n","my_torch"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RB5QpHr1kkX-","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":12,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"a23cf469-1ab5-4342-8b19-9d322ca705c2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0, 1, 2, 3, 4],\n","        [5, 6, 7, 8, 9]])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# Reshape if we dont know the number of items using -1\n","my_torch2 = torch.arange(15)\n","my_torch2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kpae9b5ik4l5","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":11,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"3c0be2be-1525-43d3-b553-726dd67beacd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["my_torch2 = my_torch2.reshape(5,-1)\n","my_torch2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"U1NcP6PblEhD","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":10,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"231c6697-4d56-4d22-9149-0420fd5946b8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 0,  1,  2],\n","        [ 3,  4,  5],\n","        [ 6,  7,  8],\n","        [ 9, 10, 11],\n","        [12, 13, 14]])"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["my_torch3 = torch.arange(10)\n","my_torch3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_LfzsGczlzSl","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":9,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"8d345aba-7895-4256-8de3-cc4c00a7dbef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["my_torch4 = my_torch3.view(2,5)\n","my_torch4"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_pUjUURCl61C","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":9,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"8770bd1f-f76c-4177-b752-1fd3b143320d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0, 1, 2, 3, 4],\n","        [5, 6, 7, 8, 9]])"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# SLICES\n","my_torch5 = torch.arange(10)\n","my_torch5"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sy4QLAUombeG","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":8,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"1b03e4fa-361c-49ee-91d7-fcf1f3d2dc3a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["my_torch5[7]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P2dEqU6Jm8I6","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":7,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"d95ccab4-667c-429b-d80c-c9df1c89e2e4"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(7)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Grab a slice\n","my_torch6 = my_torch5.reshape(5,2)\n","my_torch6"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UmgIFsuLnGlz","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":6,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"30a5f52b-e396-4db4-81c0-d4060cf0dfba"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0, 1],\n","        [2, 3],\n","        [4, 5],\n","        [6, 7],\n","        [8, 9]])"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["my_torch6[:,1:]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"idnKIS_JnT68","executionInfo":{"status":"ok","timestamp":1730426480668,"user_tz":360,"elapsed":6,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"d607e1e2-ac42-48ac-fd6d-8083bab7fab9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[1],\n","        [3],\n","        [5],\n","        [7],\n","        [9]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["# Create a Basic Neural Network Model - Deep Learning with PyTorch 5"],"metadata":{"id":"UtT2dSVDEHn1"}},{"cell_type":"code","source":["import torch\n","import torch.nn as nn # neur\n","import torch.nn.functional as F # activation functions\n"],"metadata":{"id":"M83w0ds7EGpt"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Create a model class that inherits nn.Module\n","class Model(nn.Module):\n","  #Input layer (4 features of the flower) --> Hidden layer1 -->H2 -->Output(3 classes of iris flowers)\n","  def __init__(self,in_features=4, h1=8, h2=9,out_features=3):\n","    super().__init__()\n","    self.fc1 = nn.Linear(in_features, h1) #fc stands for Fully Connected layer\n","    self.fc2 = nn.Linear(h1, h2)\n","    self.out = nn.Linear(h2,out_features)\n","\n","  def forward(self, x):\n","    x = F.relu(self.fc1(x))\n","    x = F.relu(self.fc2(x))\n","    x = self.out(x)\n","    return x\n","\n","\n"],"metadata":{"id":"CLdc2YwPTQXX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["torch.manual_seed(41)\n","model = Model()"],"metadata":{"id":"vioAJlubXD95"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import pandas as pd\n","%matplotlib inline"],"metadata":{"id":"iTBnE_W2Yp3o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["url = 'https://gist.githubusercontent.com/netj/8836201/raw/6f9306ad21398ea43cba4f7d537619d0e07d5ae3/iris.csv'\n","my_df = pd.read_csv(url)"],"metadata":{"id":"KZNw9zWPY3Ew"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["my_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Jk7ug-sjZnY9","executionInfo":{"status":"ok","timestamp":1730426481910,"user_tz":360,"elapsed":4,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"98534b69-08c1-4435-f273-27306139a3f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal.length  sepal.width  petal.length  petal.width    variety\n","0             5.1          3.5           1.4          0.2     Setosa\n","1             4.9          3.0           1.4          0.2     Setosa\n","2             4.7          3.2           1.3          0.2     Setosa\n","3             4.6          3.1           1.5          0.2     Setosa\n","4             5.0          3.6           1.4          0.2     Setosa\n","..            ...          ...           ...          ...        ...\n","145           6.7          3.0           5.2          2.3  Virginica\n","146           6.3          2.5           5.0          1.9  Virginica\n","147           6.5          3.0           5.2          2.0  Virginica\n","148           6.2          3.4           5.4          2.3  Virginica\n","149           5.9          3.0           5.1          1.8  Virginica\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-daf40112-db0f-4ce3-a618-5af38452bc72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal.length</th>\n","      <th>sepal.width</th>\n","      <th>petal.length</th>\n","      <th>petal.width</th>\n","      <th>variety</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Setosa</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Setosa</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>Setosa</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>Setosa</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>Setosa</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>Virginica</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>Virginica</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>Virginica</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>Virginica</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>Virginica</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows √ó 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-daf40112-db0f-4ce3-a618-5af38452bc72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-daf40112-db0f-4ce3-a618-5af38452bc72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-daf40112-db0f-4ce3-a618-5af38452bc72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a996d55d-4330-4404-8634-3b1a44cc0849\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a996d55d-4330-4404-8634-3b1a44cc0849')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a996d55d-4330-4404-8634-3b1a44cc0849 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_47714a45-0308-46ff-8b1b-52073fc7010b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('my_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_47714a45-0308-46ff-8b1b-52073fc7010b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('my_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"my_df","summary":"{\n  \"name\": \"my_df\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.435866284936698,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594667,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variety\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Setosa\",\n          \"Versicolor\",\n          \"Virginica\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["#Change las column from strings to integers\n","my_df['variety'] = my_df['variety'].replace('Setosa',0.0)\n","my_df['variety'] = my_df['variety'].replace('Versicolor',1.0)\n","my_df['variety'] = my_df['variety'].replace('Virginica',2.0)\n","my_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":480},"id":"unLPyPi7ZyR2","executionInfo":{"status":"ok","timestamp":1730426482300,"user_tz":360,"elapsed":9,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"d436406a-d8a0-4f0f-b0f8-9b0b86442411"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-23-16178d296d78>:4: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n","  my_df['variety'] = my_df['variety'].replace('Virginica',2.0)\n"]},{"output_type":"execute_result","data":{"text/plain":["     sepal.length  sepal.width  petal.length  petal.width  variety\n","0             5.1          3.5           1.4          0.2      0.0\n","1             4.9          3.0           1.4          0.2      0.0\n","2             4.7          3.2           1.3          0.2      0.0\n","3             4.6          3.1           1.5          0.2      0.0\n","4             5.0          3.6           1.4          0.2      0.0\n","..            ...          ...           ...          ...      ...\n","145           6.7          3.0           5.2          2.3      2.0\n","146           6.3          2.5           5.0          1.9      2.0\n","147           6.5          3.0           5.2          2.0      2.0\n","148           6.2          3.4           5.4          2.3      2.0\n","149           5.9          3.0           5.1          1.8      2.0\n","\n","[150 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-3ffe16f4-abc4-4ea0-86c6-1f5606a81629\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal.length</th>\n","      <th>sepal.width</th>\n","      <th>petal.length</th>\n","      <th>petal.width</th>\n","      <th>variety</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","      <td>2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows √ó 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ffe16f4-abc4-4ea0-86c6-1f5606a81629')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ffe16f4-abc4-4ea0-86c6-1f5606a81629 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ffe16f4-abc4-4ea0-86c6-1f5606a81629');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e079905b-b4a4-4874-90cc-d4abbf06a56b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e079905b-b4a4-4874-90cc-d4abbf06a56b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e079905b-b4a4-4874-90cc-d4abbf06a56b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f7d6d442-7f70-462b-9fc5-b8d87422025f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('my_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f7d6d442-7f70-462b-9fc5-b8d87422025f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('my_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"my_df","summary":"{\n  \"name\": \"my_df\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.435866284936698,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594667,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variety\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8192319205190405,\n        \"min\": 0.0,\n        \"max\": 2.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0,\n          1.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["#Train test split\n","X= my_df.drop('variety', axis=1)\n","y = my_df['variety']\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"4GhdmBOLaUV_","executionInfo":{"status":"ok","timestamp":1730426482300,"user_tz":360,"elapsed":7,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"34cf28b1-08e4-44ed-e156-97e16d25a0ab"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     sepal.length  sepal.width  petal.length  petal.width\n","0             5.1          3.5           1.4          0.2\n","1             4.9          3.0           1.4          0.2\n","2             4.7          3.2           1.3          0.2\n","3             4.6          3.1           1.5          0.2\n","4             5.0          3.6           1.4          0.2\n","..            ...          ...           ...          ...\n","145           6.7          3.0           5.2          2.3\n","146           6.3          2.5           5.0          1.9\n","147           6.5          3.0           5.2          2.0\n","148           6.2          3.4           5.4          2.3\n","149           5.9          3.0           5.1          1.8\n","\n","[150 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-71e9d761-e550-4339-86dd-4a1fa5f73ec7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal.length</th>\n","      <th>sepal.width</th>\n","      <th>petal.length</th>\n","      <th>petal.width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>145</th>\n","      <td>6.7</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>146</th>\n","      <td>6.3</td>\n","      <td>2.5</td>\n","      <td>5.0</td>\n","      <td>1.9</td>\n","    </tr>\n","    <tr>\n","      <th>147</th>\n","      <td>6.5</td>\n","      <td>3.0</td>\n","      <td>5.2</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>148</th>\n","      <td>6.2</td>\n","      <td>3.4</td>\n","      <td>5.4</td>\n","      <td>2.3</td>\n","    </tr>\n","    <tr>\n","      <th>149</th>\n","      <td>5.9</td>\n","      <td>3.0</td>\n","      <td>5.1</td>\n","      <td>1.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>150 rows √ó 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71e9d761-e550-4339-86dd-4a1fa5f73ec7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-71e9d761-e550-4339-86dd-4a1fa5f73ec7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71e9d761-e550-4339-86dd-4a1fa5f73ec7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f7bd0c3c-db23-4bfa-b5f7-076ebec8a891\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f7bd0c3c-db23-4bfa-b5f7-076ebec8a891')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f7bd0c3c-db23-4bfa-b5f7-076ebec8a891 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_8f5fb99a-25af-4efc-973a-f376c6b48e73\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8f5fb99a-25af-4efc-973a-f376c6b48e73 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"X","summary":"{\n  \"name\": \"X\",\n  \"rows\": 150,\n  \"fields\": [\n    {\n      \"column\": \"sepal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8280661279778629,\n        \"min\": 4.3,\n        \"max\": 7.9,\n        \"num_unique_values\": 35,\n        \"samples\": [\n          6.2,\n          4.5,\n          5.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sepal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.435866284936698,\n        \"min\": 2.0,\n        \"max\": 4.4,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          2.3,\n          4.0,\n          3.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.length\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.7652982332594667,\n        \"min\": 1.0,\n        \"max\": 6.9,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          6.7,\n          3.8,\n          3.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"petal.width\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7622376689603465,\n        \"min\": 0.1,\n        \"max\": 2.5,\n        \"num_unique_values\": 22,\n        \"samples\": [\n          0.2,\n          1.2,\n          1.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# Convert these to numpy arrays\n","X = X.values\n","y = y.values"],"metadata":{"id":"PfbbPYupavHZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n"],"metadata":{"id":"ADd8PSI3bCRI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Train\n","X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=0.2, random_state=41) #0.2 is 20% of the data will be used for testing"],"metadata":{"id":"mpwZbQwObTe3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Convert X features to float tensors (for continuous values)\n","X_train = torch.tensor(X_train, dtype=torch.float32)\n","X_test = torch.tensor(X_test, dtype=torch.float32)\n","\n","# Convert y labels to long tensors (for integer class labels)\n","y_train = torch.tensor(y_train, dtype=torch.long)\n","y_test = torch.tensor(y_test, dtype=torch.long)"],"metadata":{"id":"MGudH-8vb0U6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Set the criterion of model to measure the error, how far off the predictions are from the data\n","criterion = nn.CrossEntropyLoss()\n","# Choose Adam optimizer, learning rate (if error doesnt go down after a bunch of iterations (epochs), lower our learning rate )\n","optimizer = torch.optim.Adam(model.parameters(),lr=0.01)\n"],"metadata":{"id":"D0D9KHYqcith"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["model"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TCX8nBD0hWqu","executionInfo":{"status":"ok","timestamp":1730426497315,"user_tz":360,"elapsed":4,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"50f8d935-74a2-4170-d946-b53b044db29e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model(\n","  (fc1): Linear(in_features=4, out_features=8, bias=True)\n","  (fc2): Linear(in_features=8, out_features=9, bias=True)\n","  (out): Linear(in_features=9, out_features=3, bias=True)\n",")"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["# Train our model\n","# Epochs?\n","epochs = 100\n","losses = []\n","for i in range(epochs):\n","  # Go forwards and get a prediction\n","  y_pred = model.forward(X_train)\n","  #Measure the loss/error\n","  loss = criterion(y_pred,y_train) # predicted vs y_train\n","  #Keep track of our losses\n","  losses.append(loss.detach().numpy())\n","\n","  #print every 10 epoch\n","  if i % 10 ==0:\n","    print(f'Epoch {i} and loss: {loss}')\n","\n","  #Backpropagation\n","  optimizer.zero_grad()\n","  loss.backward()\n","  optimizer.step()\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yzTbrBdYiSNv","executionInfo":{"status":"ok","timestamp":1730426497316,"user_tz":360,"elapsed":4,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"f5577bac-f07d-4221-ffec-9145bab54945"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 0 and loss: 1.125203251838684\n","Epoch 10 and loss: 1.0097211599349976\n","Epoch 20 and loss: 0.8162348866462708\n","Epoch 30 and loss: 0.585993230342865\n","Epoch 40 and loss: 0.4003390073776245\n","Epoch 50 and loss: 0.2679471969604492\n","Epoch 60 and loss: 0.1796349734067917\n","Epoch 70 and loss: 0.12165623158216476\n","Epoch 80 and loss: 0.0860651433467865\n","Epoch 90 and loss: 0.06522615998983383\n"]}]},{"cell_type":"code","source":["# Graph\n","plt.plot( range(epochs),losses)\n","plt.ylabel(\"loss/error\")\n","plt.xlabel(\"Epoch\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":467},"id":"djj9pA2mb8Wq","executionInfo":{"status":"ok","timestamp":1730426929647,"user_tz":360,"elapsed":436,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"a00b67ef-c7ef-4f15-dfd8-99ed50efcc86"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Epoch')"]},"metadata":{},"execution_count":33},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8vWHgk_Le6nm","executionInfo":{"status":"ok","timestamp":1730426978273,"user_tz":360,"elapsed":327,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"7624c2b1-bdf5-4288-d920-0db321ecdcb7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([120])"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["# EVALUATE MODEL ON TEST DATASET\n","with torch.no_grad(): #turns off back propagation\n","  y_eval = model.forward(X_test) # X_test are features form our test set\n","  loss = criterion(y_eval, y_test) # Find loss or error\n","\n","loss\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M__BZgCAdYFR","executionInfo":{"status":"ok","timestamp":1730427071174,"user_tz":360,"elapsed":289,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"332ba5f3-8deb-489c-8e2d-0f7053f11b35"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor(0.1315)"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["correct = 0\n","with torch.no_grad():\n","  for i, data in enumerate(X_test):\n","    y_val = model.forward(data)\n","    if y_test[i] ==0:\n","      x=\"Setosa\"\n","    elif y_test[i] ==1:\n","      x=\"Versicolor\"\n","    elif y_test[i] ==2:\n","      x=\"Virginica\"\n","\n","    # Will tell us what type of flowe class our network thinks it is\n","    print(f'{i+1}.) {str(y_val)} \\t {x} \\t {True if y_val.argmax().item()==y_test[i] else False}')\n","    #Correct or not\n","\n","    if y_val.argmax().item() == y_test[i]:\n","      correct +=1\n","\n","print(f'We got {correct} correct')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e4AHCx7Gfl1I","executionInfo":{"status":"ok","timestamp":1730428345991,"user_tz":360,"elapsed":262,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"0a6b5272-7505-4466-dfa9-4a92d9c408c9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1.) tensor([-5.8771,  4.4629,  6.5155]) \t Virginica \t True\n","2.) tensor([-7.5451,  4.1668,  9.7293]) \t Virginica \t True\n","3.) tensor([-8.4517,  5.1275, 10.2015]) \t Virginica \t True\n","4.) tensor([-4.3411,  5.6280,  2.5636]) \t Versicolor \t True\n","5.) tensor([-7.1838,  4.8757,  8.3024]) \t Virginica \t True\n","6.) tensor([-3.3940,  5.3421,  1.2802]) \t Versicolor \t True\n","7.) tensor([-5.9240,  4.9826,  6.0025]) \t Virginica \t True\n","8.) tensor([-4.2895,  5.7016,  2.3920]) \t Versicolor \t True\n","9.) tensor([-6.5369,  4.9261,  7.1291]) \t Virginica \t True\n","10.) tensor([-8.0526,  4.4129, 10.3325]) \t Virginica \t True\n","11.) tensor([-5.6775,  4.9505,  5.6248]) \t Virginica \t True\n","12.) tensor([ 4.5748, -2.2579, -2.8925]) \t Setosa \t True\n","13.) tensor([ 4.2646, -2.0055, -2.7342]) \t Setosa \t True\n","14.) tensor([-2.1081,  4.0482,  0.5803]) \t Versicolor \t True\n","15.) tensor([ 3.4608, -1.2147, -2.3488]) \t Setosa \t True\n","16.) tensor([-5.4739,  5.1174,  5.0966]) \t Virginica \t False\n","17.) tensor([ 4.0637, -1.8045, -2.6504]) \t Setosa \t True\n","18.) tensor([-5.8090,  4.6057,  6.2494]) \t Versicolor \t False\n","19.) tensor([ 4.9250, -2.5763, -3.0545]) \t Setosa \t True\n","20.) tensor([ 3.4559, -1.2559, -2.3637]) \t Setosa \t True\n","21.) tensor([-2.6161,  4.5584,  0.8575]) \t Versicolor \t True\n","22.) tensor([-7.7427,  4.7379,  9.4233]) \t Virginica \t True\n","23.) tensor([ 3.5776, -1.3269, -2.4109]) \t Setosa \t True\n","24.) tensor([ 4.5445, -2.2478, -2.8698]) \t Setosa \t True\n","25.) tensor([-2.6548,  4.6138,  0.8825]) \t Versicolor \t True\n","26.) tensor([-3.2832,  5.2189,  1.2163]) \t Versicolor \t True\n","27.) tensor([-4.6527,  5.7790,  2.9302]) \t Versicolor \t True\n","28.) tensor([-2.9436,  4.8858,  1.0381]) \t Versicolor \t True\n","29.) tensor([ 4.5932, -2.2788, -2.8989]) \t Setosa \t True\n","30.) tensor([-4.5797,  5.4566,  3.1690]) \t Versicolor \t True\n","We got 28 correct\n"]}]},{"cell_type":"markdown","source":["#Evaluate NEW Data On The Network"],"metadata":{"id":"cz6FzgAVm8I2"}},{"cell_type":"code","source":["new_iris = torch.tensor([4.7,3.2,1.3,0.2])"],"metadata":{"id":"vB4eytxOm9PR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["eval_datapoint(new_iris)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0ZzFV2fBnHDc","executionInfo":{"status":"ok","timestamp":1730430084929,"user_tz":360,"elapsed":248,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"188decf5-4885-4768-f24c-498013c3fe5f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction: 0 = Setosa\n"]}]},{"cell_type":"code","source":["def eval_datapoint(d):\n","  with torch.no_grad():\n","    predicted= model(d).argmax().item()\n","    name = name_class(predicted)\n","    print(f'Prediction: {predicted} = {name}')\n","\n","\n"],"metadata":{"id":"u5tK1K-dpDtJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def name_class(v):\n"," if v == 0:\n","      x=\"Setosa\"\n"," elif v ==1:\n","      x=\"Versicolor\"\n"," elif v ==2:\n","      x=\"Virginica\"\n","\n"," return x\n"],"metadata":{"id":"iEjhD8qMolDb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["new_iris1 = torch.tensor([5.9,3.0,5.1,1.8])"],"metadata":{"id":"_bm2woqfojdP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import timeit\n","# Measure execution time\n","execution_time = timeit.timeit(lambda: eval_datapoint(new_iris1), number=1)  # Execute once\n","print(f\"Execution time: {execution_time:.4f} seconds\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NduRkDt1pCUa","executionInfo":{"status":"ok","timestamp":1730430291007,"user_tz":360,"elapsed":2,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"283199d5-1d75-401a-eb18-a4a8d4c843be"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction: 2 = Virginica\n","Execution time: 0.0008 seconds\n"]}]},{"cell_type":"markdown","source":["#Save and Load our Neural Network Model"],"metadata":{"id":"TCvFLdr3q28Q"}},{"cell_type":"code","source":["torch.save(model.state_dict(), 'my_model_parameters.pt') # SAves weights and biases"],"metadata":{"id":"8sc7kK0lq31c"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Load the saved model\n","new_model = Model()\n","new_model.load_state_dict(torch.load('my_model_parameters.pt'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZ5yzTCer7gL","executionInfo":{"status":"ok","timestamp":1730430429934,"user_tz":360,"elapsed":236,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"093075fe-f4ef-41cd-f91e-345aebc9b9ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-93-a87cc0ba8ea5>:3: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n","  new_model.load_state_dict(torch.load('my_model_parameters.pt'))\n"]},{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["# Make sure it loaded correctly\n","new_model.eval()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BNyPETe0scNp","executionInfo":{"status":"ok","timestamp":1730430515384,"user_tz":360,"elapsed":237,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"08fe4880-2a2e-4f6e-dd01-f2c0e1fa809a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Model(\n","  (fc1): Linear(in_features=4, out_features=8, bias=True)\n","  (fc2): Linear(in_features=8, out_features=9, bias=True)\n","  (out): Linear(in_features=9, out_features=3, bias=True)\n",")"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["with torch.no_grad():\n","    predicted= new_model(new_iris1).argmax().item()\n","    name = name_class(predicted)\n","    print(f'Prediction: {predicted} = {name}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hP-EI_0Es1zh","executionInfo":{"status":"ok","timestamp":1730430628398,"user_tz":360,"elapsed":261,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"06ceb68d-e0e5-4934-c932-8b33a37ff9eb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Prediction: 2 = Virginica\n"]}]},{"cell_type":"code","source":["import torch\n","device = (\n","    \"cuda\"\n","    if torch.cuda.is_available()\n","    else \"mps\"\n","    if torch.backends.mps.is_available()\n","    else \"cpu\"\n",")\n","print(f\"Using {device} device\")"],"metadata":{"id":"EefSkLkyvBC_","executionInfo":{"status":"ok","timestamp":1730433509854,"user_tz":360,"elapsed":9687,"user":{"displayName":"Jos√© Aldo Salazar Neri","userId":"16149410565200808852"}},"outputId":"52ace758-1b08-44e8-ba83-e80cee78b2b4","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Using cuda device\n"]}]}]}